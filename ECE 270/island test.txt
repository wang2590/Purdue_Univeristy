MODULE Friday test

TITLE 'Lab Practical Exam Skeleton File'

" Target CPLD is ispMACH LC4256ZE 144-pin TQFP (LC4256ZE-5TN144C)

LIBRARY 'lattice';

DECLARATIONS

" Internal Oscillator

osc_dis, osc_rst, osc_out, tmr_out node istype 'com';

" Use max possible internal divisor -> yields approx 4 Hz output square wave on tmr_out

XLAT_OSCTIMER(DYNOSCDIS, TIMERRES, OSCOUT, TIMEROUT, 1048576);

" Input pins from DIP switch
" DOWN - contact closure to ground - logic 0
" UP - open contact pulled high with resistor - logic 1

DIP0 pin 79;	"IO_K6
DIP1 pin 78;	"IO_K8
DIP2 pin 77;	"IO_K10
DIP3 pin 76;	"IO_K12
DIP4 pin 23;	"IO_E6
DIP5 pin 24;	"IO_E8
DIP6 pin 25;	"IO_E10
DIP7 pin 26;	"IO_E12

DIP = [DIP7, DIP6, DIP5, DIP4, DIP3, DIP2, DIP1, DIP0];

" SPDT toggle switches (can be used to create bounceless switches) 
" ACTIVE LOW (contact closure to ground, with pull-up)
!S1_NC pin 58;	"IO_I2   normally closed (down position)
!S1_NO pin 59;	"IO_I4   normally open (up position)
!S2_NC pin 60;	"IO_I6   normally closed (down position)
!S2_NO pin 61;	"IO_I8   normally open (up position)

" Top row of red LEDs

!LED0 pin 40 istype 'com';	"IO_G10  right-most
!LED1 pin 39 istype 'com';	"IO_G12
!LED2 pin 33 istype 'com';	"IO_F12
!LED3 pin 32 istype 'com'; 	"IO_F10
!LED4 pin 31 istype 'com';	"IO_F8
!LED5 pin 30 istype 'com';	"IO_F6
!LED6 pin 29 istype 'com';	"IO_F4
!LED7 pin 28 istype 'com';	"IO_F2   left-most

TOPRED = [LED7, LED6, LED5, LED4, LED3, LED2, LED1, LED0];

" Second row (from top) of red LEDs

!LED8 pin 139 istype 'com';	"IO_B4   right-most
!LED9 pin 138 istype 'com';	"IO_B2
!LED10 pin 135 istype 'com';	"IO_A12	
!LED11 pin 134 istype 'com';	"IO_A10
!LED12 pin 133 istype 'com';	"IO_A8
!LED13 pin 132 istype 'com';	"IO_A6
!LED14 pin 131 istype 'com';	"IO_A4
!LED15 pin 130 istype 'com';	"IO_A2   left-most

MIDRED = [LED15, LED14, LED13, LED12, LED11, LED10, LED9, LED8];

" 7-segment common-anode displays (active low outputs)
" Right-most display (DIS1)

!DIS1a pin 87 istype 'com';	"IO_L6
!DIS1b pin 86 istype 'com';	"IO_L8
!DIS1c pin 85 istype 'com';	"IO_L10
!DIS1d pin 84 istype 'com';	"IO_L12
!DIS1e pin 83 istype 'com';	"IO_L14
!DIS1f pin 81 istype 'com';	"IO_K2
!DIS1g pin 80 istype 'com';	"IO_K4

DIS1 = [DIS1a, DIS1b, DIS1c, DIS1d, DIS1e, DIS1f, DIS1g];

" Second-from-right display (DIS2)

!DIS2a pin 98 istype 'com';	"IO_M12
!DIS2b pin 97 istype 'com';	"IO_M10
!DIS2c pin 96 istype 'com';	"IO_M8
!DIS2d pin 95 istype 'com';	"IO_M6
!DIS2e pin 94 istype 'com';	"IO_M4
!DIS2f pin 93 istype 'com';	"IO_M2
!DIS2g pin 88 istype 'com';	"IO_L4

DIS2 = [DIS2a, DIS2b, DIS2c, DIS2d, DIS2e, DIS2f, DIS2g];

" Second-from-left display (DIS3)

!DIS3a pin 125 istype 'com';	"IO_P2
!DIS3b pin 124 istype 'com';	"IO_P4
!DIS3c pin 123 istype 'com';	"IO_P6
!DIS3d pin 122 istype 'com';  "IO_P8
!DIS3e pin 121 istype 'com';	"IO_P10
!DIS3f pin 120 istype 'com';	"IO_P12
!DIS3g pin 116 istype 'com';	"IO_O2

DIS3 = [DIS3a, DIS3b, DIS3c, DIS3d, DIS3e, DIS3f, DIS3g];

" Left-most display (DIS4)

!DIS4a pin 44 istype 'com';	"IO_G2
!DIS4b pin 48 istype 'com';	"IO_H12
!DIS4c pin 49 istype 'com';	"IO_H10
!DIS4d pin 50 istype 'com';	"IO_H8
!DIS4e pin 51 istype 'com';	"IO_H6
!DIS4f pin 52 istype 'com'; 	"IO_H4
!DIS4g pin 53 istype 'com';	"IO_H2

DIS4 = [DIS4a, DIS4b, DIS4c, DIS4d, DIS4e, DIS4f, DIS4g];

" Jumbo R-Y-G LEDs
!LED16 pin 140 istype 'com';	"IO_B6   RED
!LED17 pin 141 istype 'com';	"IO_B8   YELLOW
!LED18 pin 142 istype 'com';	"IO_B10  GREEN
!LED19 pin 143 istype 'com';	"IO_B12  (unpopulated)

" Bottom row of red LEDs

!LED20 pin 100 istype 'com';	"IO_N2   right-most
!LED21 pin 101 istype 'com';	"IO_N4
!LED22 pin 102 istype 'com';	"IO_N6
!LED23 pin 103 istype 'com';	"IO_N8
!LED24 pin 104 istype 'com';	"IO_N10
!LED25 pin 105 istype 'com';	"IO_N12
!LED26 pin 111 istype 'com';	"IO_O12
!LED27 pin 112 istype 'com';	"IO_O10  left-most

BOTRED = [LED27, LED26, LED25, LED24, LED23, LED22, LED21, LED20];

" Yellow LEDs next to toggle switches
!LED28 pin 63 istype 'com';	"IO_I12  right
!LED29 pin 62 istype 'com';	"IO_I10  left

" 7-segment alphanumeric display code declarations
blank = [0,0,0,0,0,0,0];  " blank (all off)
char0 = [1,1,1,1,1,1,0];  " 0
char1 = [0,1,1,0,0,0,0];  " 1
char2 = [1,1,0,1,1,0,1];  " 2
char3 = [1,1,1,1,0,0,1];  " 3
char4 = [0,1,1,0,0,1,1];  " 4
char5 = [1,0,1,1,0,1,1];  " 5
char6 = [1,0,1,1,1,1,1];  " 6
char7 = [1,1,1,0,0,0,0];  " 7
char8 = [1,1,1,1,1,1,1];  " 8
char9 = [1,1,1,1,0,1,1];  " 9
charA = [1,1,1,0,1,1,1];  " A
charB = [0,0,1,1,1,1,1];  " b
charC = [1,0,0,1,1,1,0];  " C
charD = [0,1,1,1,1,0,1];  " d
charE = [1,0,0,1,1,1,1];  " E
charF = [1,0,0,0,1,1,1];  " F
charG = [1,1,1,1,0,1,1];  " g
charH = [0,1,1,0,1,1,1];  " H
charI = [0,0,1,0,0,0,0];  " i
charJ = [0,1,1,1,0,0,0];  " J
charL = [0,0,0,1,1,1,0];  " L
charN = [0,0,1,0,1,0,1];  " n
charO = [0,0,1,1,1,0,1];  " o
charP = [1,1,0,0,1,1,1];  " P
charR = [0,0,0,0,1,0,1];  " r
charS = [1,0,1,1,0,1,1];  " S
charU = [0,1,1,1,1,1,0];  " U
charY = [0,1,1,1,0,1,1];  " y	

" Bounceless switches

S1BC node istype 'reg_D,buffer';
S2BC node istype 'reg_D,buffer';

timdiv node istype 'reg_D,buffer';
timdiv2 node istype 'reg_D,buffer';

s0 .. s3 node istype 'reg';
sall = [s0 .. s3];

rdis16 .. rdis10 node istype 'com';
rdis1 = [rdis16,rdis15,rdis14,rdis13,rdis12,rdis11,rdis10];

rdis26 .. rdis20 node istype 'reg';
rdis2 = [rdis26,rdis25,rdis24,rdis23,rdis22,rdis21,rdis20];

rdis36 .. rdis30 node istype 'reg';
rdis3 = [rdis36,rdis35,rdis34,rdis33,rdis32,rdis31,rdis30];

rdis46 .. rdis40 node istype 'com';
rdis4 = [rdis46,rdis45,rdis44,rdis43,rdis42,rdis41,rdis40];

q0..q5 node istype 'reg'; "not from q5 .. q0 ?
qall = [q0 ..q5];

A0   = [ 0, 0, 0, 0, 0]; "blank
A1   = [ 0, 0, 0, 0, 1]; "O        On ISLAnd
A2   = [ 0, 0, 0, 1, 0]; "n        yoU LoSEr
A3   = [ 0, 0, 0, 1, 1]; "blank
A4   = [ 0, 0, 1, 0, 0]; "i
A5   = [ 0, 0, 1, 0, 1]; "S
A6   = [ 0, 0, 1, 1, 0]; "L
A7   = [ 0, 0, 1, 1, 1]; "A
A8   = [ 0, 1, 0, 0, 0]; "n
A9   = [ 0, 1, 0, 0, 1]; "d     
A10   = [ 0, 1, 0, 1, 0]; "y  
A11   = [ 0, 1, 0, 1, 1]; "o
A12   = [ 0, 1, 1, 0, 0]; "U
A13   = [ 0, 1, 1, 0, 1]; "blank
A14   = [ 0, 1, 1, 1, 0]; "L
A15   = [ 0, 1, 1, 1, 1]; "o
A16   = [ 1, 0, 0, 0, 0]; "S
A17   = [ 1, 0, 0, 0, 1]; "E
A18   = [ 1, 0, 0, 1, 0]; "r
A19   = [ 1, 0, 0, 1, 1]; "blank for start
A20   = [ 1, 0, 1, 0, 0];"blank for A1
A21   = [ 1, 0, 1, 0, 1];"blank for A10

STATE_DIAGRAM QALL

state A0:      if (S1BC == 1) then A19
		else goto A0; 
         
state A19:      if (small < [0, 1, 1, 0]) then A10
		else goto A1;

state A1:	goto A2;
state A2:	goto A3;
state A3:	goto A4;
state A4:	goto A5;
state A5:	goto A6;
state A6:	goto A7;
state A7:	goto A8;
state A8:	goto A9;
state A9:	goto A20;
state A20:	goto A1;

state A10:	goto A11;
state A11:	goto A12;
state A12:	goto A13;
state A13:	goto A14;
state A14:	goto A15;
state A15:	goto A16;
state A16:	goto A17;
state A17:	goto A18;
state A18:	goto A21;
state A21:	goto A10;

truth_table([qall] -> [rdis1])
	[A0]->[blank];
	[A1]->[charO];
	[A2]->[charN];
	[A3]->[blank];
	[A4]->[charI];
	[A5]->[charS];
	[A6]->[charL];
	[A7]->[charA];
	[A8]->[charN];
	[A9]->[charD];
	[A10]->[charY];
	[A11]->[charO];
	[A12]->[charU];
	[A13]->[blank];
	[A14]->[charL];
	[A15]->[charO];
	[A16]->[charS];
	[A17]->[charE];
	[A18]->[charR];
	[A19]->[blank];
 	[A20]->[blank];
	[A21]->[blnak];

truth_table([sall] -> [rdis4])
	[0,0,0,0] -> [char0];
	[0,0,0,1] -> [char1];
	[0,0,1,0] -> [char2];
	[0,0,1,1] -> [char3];
	[0,1,0,0] -> [char4];
	[0,1,0,1] -> [char5];
	[0,1,1,0] -> [char6];
	[0,1,1,1] -> [char7];
	[1,0,0,0] -> [char8];



" ======================= START OF EQUATIONS SECTION =================================

EQUATIONS

" Internal oscillator setup (disable/enable and reset variables) and OSCTIMER instance

osc_dis = 0;
osc_rst = 0;

" Oscillator output is tmr_out

I1 OSCTIMER(osc_dis, osc_rst, osc_out, tmr_out);

" Bounceless switches (S1 and S2)

S1BC.d = 0;
S1BC.clk = 0;
S1BC.ap = S1_NO;
S1BC.ar = S1_NC;
LED28 = S1BC.q;

S2BC.d = 0;
S2BC.clk = 0;
S2BC.ap = S2_NO;
S2BC.ar = S2_NC;
LED29 = S2BC.q;

timdiv.clk = tmr_out;
timdiv = !timdiv;

timdiv2.clk = timdiv;
timdiv2 = !timdiv2;

"calcualte vote
sall=[0,0,0,DIP7]+[0,0,0,DIP6]+[0,0,0,DIP5]+[0,0,0,DIP4]+[0,0,0,DIP3]+[0,0,0,DIP2]+[0,0,0,DIP1]+[0,0,0,DIP0];
sall.clk = S1BC & !q0 & !q1 & !q2 & !q3 & !q4 & !q5 & !q6;
sall.ar = S2BC;

qall.clk = timdiv2;
rdis2.clk = timdiv2;
rdis3.clk = timdiv2;

qall.ar = S2BC;
rdis2.ar = S2BC;
rdis3.ar = S2BC;

"scroll displaying
rdis3 := rdis2;
rdis2 := rdis1;

DIS1 = rdis1;
DIS2 = rdis2;
DIS3 = rdis3;
DIS4 = rdis4;

[LED3 .. LED0] = sall;
[LED27 .. LED20] = [DIP7 .. DIP0];

END
