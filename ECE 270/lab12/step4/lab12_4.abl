MODULE lab12_4

TITLE 'lab12_4'

" Target CPLD is ispMACH LC4256ZE 144-pin TQFP (LC4256ZE-5TN144C)
 
LIBRARY 'lattice';
 
DECLARATIONS
 
" Internal Oscillator
 
osc_dis, osc_rst, osc_out, tmr_out node istype 'com';
 
" Use maximum possible internal divisor -> yields approx 4 Hz output frequency
 
XLAT_OSCTIMER(DYNOSCDIS, TIMERRES, OSCOUT, TIMEROUT, 1048576);
 
" Input pins from DIP switch
" DOWN - contact closure to ground - logic 0
" UP - open contact pulled high with resistor - logic 1
 
DIP0 pin 79;        "IO_K6
DIP1 pin 78;        "IO_K8
DIP2 pin 77;        "IO_K10
DIP3 pin 76;        "IO_K12
DIP4 pin 23;        "IO_E6
DIP5 pin 24;        "IO_E8
DIP6 pin 25;        "IO_E10
DIP7 pin 26;        "IO_E12
 
DIP = [DIP7, DIP6, DIP5, DIP4, DIP3, DIP2, DIP1, DIP0];
 
" SPDT toggle switches (can be used to create bounceless switches)
" ACTIVE LOW (contact closure to ground, with pull-up)
!S1_NC pin 58;        "IO_I2   normally closed (down position)
!S1_NO pin 59;        "IO_I4   normally open (up position)
!S2_NC pin 60;        "IO_I6   normally closed (down position)
!S2_NO pin 61;        "IO_I8   normally open (up position)
 
" Top row of red LEDs
 
!LED0 pin 40 istype 'com';        "IO_G10  right-most
!LED1 pin 39 istype 'com';        "IO_G12
!LED2 pin 33 istype 'com';        "IO_F12
!LED3 pin 32 istype 'com';         "IO_F10
!LED4 pin 31 istype 'com';        "IO_F8
!LED5 pin 30 istype 'com';        "IO_F6
!LED6 pin 29 istype 'com';        "IO_F4
!LED7 pin 28 istype 'com';        "IO_F2   left-most
 
TOPRED = [LED7, LED6, LED5, LED4, LED3, LED2, LED1, LED0];
 
" Second row (from top) of red LEDs
 
!LED8 pin 139 istype 'com';        "IO_B4   right-most
!LED9 pin 138 istype 'com';        "IO_B2
!LED10 pin 135 istype 'com';        "IO_A12        
!LED11 pin 134 istype 'com';        "IO_A10
!LED12 pin 133 istype 'com';        "IO_A8
!LED13 pin 132 istype 'com';        "IO_A6
!LED14 pin 131 istype 'com';        "IO_A4
!LED15 pin 130 istype 'com';        "IO_A2   left-most
 
MIDRED = [LED15, LED14, LED13, LED12, LED11, LED10, LED9, LED8];
 
" 7-segment common-anode displays (active low outputs)
" Right-most display (DIS1)
 
!DIS1a pin 87 istype 'com';        "IO_L6
!DIS1b pin 86 istype 'com';        "IO_L8
!DIS1c pin 85 istype 'com';        "IO_L10
!DIS1d pin 84 istype 'com';        "IO_L12
!DIS1e pin 83 istype 'com';        "IO_L14
!DIS1f pin 81 istype 'com';        "IO_K2
!DIS1g pin 80 istype 'com';        "IO_K4
 
DIS1 = [DIS1a, DIS1b, DIS1c, DIS1d, DIS1e, DIS1f, DIS1g];
 
" Second-from-right display (DIS2)
 
!DIS2a pin 98 istype 'com';        "IO_M12
!DIS2b pin 97 istype 'com';        "IO_M10
!DIS2c pin 96 istype 'com';        "IO_M8
!DIS2d pin 95 istype 'com';        "IO_M6
!DIS2e pin 94 istype 'com';        "IO_M4
!DIS2f pin 93 istype 'com';        "IO_M2
!DIS2g pin 88 istype 'com';        "IO_L4
 
DIS2 = [DIS2a, DIS2b, DIS2c, DIS2d, DIS2e, DIS2f, DIS2g];
 
" Second-from-left display (DIS3)
 
!DIS3a pin 125 istype 'com';        "IO_P2
!DIS3b pin 124 istype 'com';        "IO_P4
!DIS3c pin 123 istype 'com';        "IO_P6
!DIS3d pin 122 istype 'com';  "IO_P8
!DIS3e pin 121 istype 'com';        "IO_P10
!DIS3f pin 120 istype 'com';        "IO_P12
!DIS3g pin 116 istype 'com';        "IO_O2
 
DIS3 = [DIS3a, DIS3b, DIS3c, DIS3d, DIS3e, DIS3f, DIS3g];
 
" Left-most display (DIS4)
 
!DIS4a pin 44 istype 'com';        "IO_G2
!DIS4b pin 48 istype 'com';        "IO_H12
!DIS4c pin 49 istype 'com';        "IO_H10
!DIS4d pin 50 istype 'com';        "IO_H8
!DIS4e pin 51 istype 'com';        "IO_H6
!DIS4f pin 52 istype 'com';         "IO_H4
!DIS4g pin 53 istype 'com';        "IO_H2
 
DIS4 = [DIS4a, DIS4b, DIS4c, DIS4d, DIS4e, DIS4f, DIS4g];
 
" Jumbo R-Y-G LEDs
!LED16 pin 140 istype 'com';        "IO_B6   RED
!LED17 pin 141 istype 'com';        "IO_B8   YELLOW
!LED18 pin 142 istype 'com';        "IO_B10  GREEN
!LED19 pin 143 istype 'com';        "IO_B12  (unpopulated)
 
" Bottom row of red LEDs
 
!LED20 pin 100 istype 'com';        "IO_N2   right-most
!LED21 pin 101 istype 'com';        "IO_N4
!LED22 pin 102 istype 'com';        "IO_N6
!LED23 pin 103 istype 'com';        "IO_N8
!LED24 pin 104 istype 'com';        "IO_N10
!LED25 pin 105 istype 'com';        "IO_N12
!LED26 pin 111 istype 'com';        "IO_O12
!LED27 pin 112 istype 'com';        "IO_O10  left-most
 
BOTRED = [LED27, LED26, LED25, LED24, LED23, LED22, LED21, LED20];
 
" Yellow LEDs next to toggle switches
!LED28 pin 63 istype 'com';        "IO_I12  right
!LED29 pin 62 istype 'com';        "IO_I10  left
 
" 7-segment alphanumeric display code declarations
blank = [0,0,0,0,0,0,0];  " blank (all off)
char0 = [1,1,1,1,1,1,0];  " 0
char1 = [0,1,1,0,0,0,0];  " 1
char2 = [1,1,0,1,1,0,1];  " 2
char3 = [1,1,1,1,0,0,1];  " 3
char4 = [0,1,1,0,0,1,1];  " 4
char5 = [1,0,1,1,0,1,1];  " 5
char6 = [1,0,1,1,1,1,1];  " 6
char7 = [1,1,1,0,0,0,0];  " 7
char8 = [1,1,1,1,1,1,1];  " 8
char9 = [1,1,1,1,0,1,1];  " 9
charA = [1,1,1,0,1,1,1];  " A
charB = [0,0,1,1,1,1,1];  " b
charC = [1,0,0,1,1,1,0];  " C
charD = [0,1,1,1,1,0,1];  " d
charE = [1,0,0,1,1,1,1];  " E
charF = [1,0,0,0,1,1,1];  " F
charG = [1,1,1,1,0,1,1];  " g
charH = [0,1,1,0,1,1,1];  " H
charI = [0,0,1,0,0,0,0];  " i
charJ = [0,1,1,1,0,0,0];  " J
charL = [0,0,0,1,1,1,0];  " L
charN = [0,0,1,0,1,0,1];  " n
charO = [0,0,1,1,1,0,1];  " o
charP = [1,1,0,0,1,1,1];  " P
charR = [0,0,0,0,1,0,1];  " r
charS = [1,0,1,1,0,1,1];  " S
charU = [0,1,1,1,1,1,0];  " U
charY = [0,1,1,1,0,1,1];  " y        
 
" User-defined variables follow
 
" Note - these should all be declared as NODES (*not* PINS)
 
"Switches and timer
SW1,SW2,T1,T2 node istype 'reg';
 
"CIN = SW2;   ""carry in for step 1
CIN = 1;      "carry in for subtractor/comparator
 
"for adder/subtractor and comparator
CA0..CA3 node istype 'com'; " carry functions
CARRYALL = [CA3..CA0];
S0..S3 node istype 'com'; " sum outputs
SALL = [S3..S0];
 
"for point total adder
CAB0..CAB3 node istype 'com';
SB0..SB3 node istype 'com';
SBALL = [SB3..SB0];
 
"for adder/subtractor and comparator
X3..X0 node istype 'com';
XALL = [X3..X0];
 
Y3..Y0 node istype 'com';
YALL = [Y3..Y0];
 
 
"for 1s place digit of point total
XB3..XB0 node istype 'reg';
XBALL = [XB3..XB0];
 
"for adding 0/4/9 to point total
YB3..YB0 node istype 'com';
YBALL = [YB3..YB0];
 
"for 10s place digit of point total
L3..L0 node istype 'reg';
LALL = [L3..L0];
 
"for adder/subtractor and comparator
G0 = X0&(Y0$CIN); " generate function definitions
G1 = X1&(Y1$CIN);
G2 = X2&(Y2$CIN);
G3 = X3&(Y3$CIN);
 
P0 = X0$(Y0$CIN); " propagate function definitions
P1 = X1$(Y1$CIN);
P2 = X2$(Y2$CIN);
P3 = X3$(Y3$CIN);
 
"for adding point total
GB0 = XB0 & YB0;
GB1 = XB1 & YB1;
GB2 = XB2 & YB2;
GB3 = XB3 & YB3;
 
PB0 = XB0$YB0;
PB1 = XB1$YB1;
PB2 = XB2$YB2;
PB3 = XB3$YB3;
 
"Flags for adder/subtractor and comparator
CBF,NBF,ZBF,VBF node istype 'com';
BFLAGS = [CBF,NBF,ZBF,VBF];
 
"Flags for adding total points
CF, NF, ZF, VF node istype 'com';
FLAGS = [CF,NF,ZF,VF];
 
"Don't remember what these are for
SR3..SR0 node istype 'reg';
SRALL = [SR3..SR0];
 
"reg variables for shift register
B6..B0, C6..C0, D6..D0 node istype 'reg';
A6..A0 node istype 'com';
AALL = [A6..A0];
BALL = [B6..B0];
CALL = [C6..C0];
DALL = [D6..D0];
 
"random placeholders for associating a number character with a bcd value
TEMPA6..TEMPA0 node istype 'com';
TEMPA = [TEMPA6..TEMPA0];
TEMPB6..TEMPB0 node istype 'com';
TEMPB = [TEMPB6..TEMPB0];
 
"counts game round
COUNT3..COUNT0 node istype 'reg';
CTALL = [COUNT3..COUNT0];
CT1 = [0,0,0,1];
CT2 = [0,0,1,0];
CT3 = [0,0,1,1];
CT4 = [0,1,0,0];
CT5 = [0,1,0,1];
CT6 = [0,1,1,0];
CT7 = [0,1,1,1];
CT8 = [1,0,0,0];
CT9 = [1,0,0,1];
CT10 = [1,0,1,0];

"cycles through rounds
STATE_DIAGRAM CTALL
 
state CT1: goto CT2;
state CT2: goto CT3;  
state CT3: goto CT4;
state CT4: goto CT5;
state CT5: goto CT6;  
state CT6: goto CT7;
state CT7: goto CT8;
state CT8: goto CT9;  
state CT9: goto CT10;
state CT10: goto CT10;
 
 
" ======================= START OF EQUATIONS SECTION =================================
 
EQUATIONS
 
" Internal oscillator setup (disable/enable and reset variables) and OSCTIMER instance
 
osc_dis = 0;
osc_rst = 0;
 
I1 OSCTIMER(osc_dis, osc_rst, osc_out, tmr_out);
 
 
" User-defined equations, clocked-operator tables, and/or state diagram definitions follow
 
"Switches
SW1.D = 0;
SW1.CLK = 0;
SW1.AP = S1_NO;
SW1.AR = S1_NC;
 
SW2.D = 0;
SW2.CLK = 0;
SW2.AP = S2_NO;
SW2.AR = S2_NC;
 
"STEP 1
YALL = [DIP3..DIP0];
 
CA0 = G0 # CIN&P0; " carry function definitions
CA1 = G1 # G0&P1 # CIN&P0&P1;
CA2 = G2 # G1&P2 # G0&P1&P2 # CIN&P0&P1&P2;
CA3 = G3 # G2&P3 # G1&P2&P3 # G0&P1&P2&P3 # CIN&P0&P1&P2&P3;
 
S0 = CIN$P0;
S1 = CA0$P1;
S2 = CA1$P2;
S3 = CA2$P3;

[LED3..LED0] = SALL;
 
CF = !(CA3$CIN);
NF = S3;
ZF = !(S3#S2#S1#S0);
VF = (CA3$CA2);
 
"STEP 2
LED17 = VF&NF # !VF&!NF&!ZF;"Red
LED18 = ZF;"Green
LED16 = NF $ VF;"Yellow
[LED18..LED16].EN = DIP7;
 
 
"STEP 3
SR0 := (SR2$SR3)$(!SR2&!SR1&!SR0);
SR1 := SR0;
SR2 := SR1;
SR3 := SR2;
 
SRALL.clk = SW1;
SRALL.AR = SW2;
[LED11..LED8] = SRALL;
[LED11..LED8].EN = DIP7;
XALL = SRALL;
 
"STEP 4
CTALL.clk = SW1;
DIS4 = ((CTALL == 1)&char1)#((CTALL == 2)&char2)#((CTALL == 3)&char3)#((CTALL == 4)&char4)#
       ((CTALL == 5)&char5)#((CTALL == 6)&char6)#((CTALL == 7)&char7)#((CTALL == 8)&char8)#                
        ((CTALL == 9)&char9)#((CTALL == 10)&char9);
[COUNT3..COUNT1].ar = SW2;
COUNT0.ap = SW2;


END

